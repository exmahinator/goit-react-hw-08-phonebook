{"version":3,"file":"static/js/937.32424427.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","components/redux/contacts/contactsSelectors.js","components/contactList/PhoneBook.jsx","components/handleForm/HandleForm.jsx","components/filterContacts/FilterContacts.jsx","pages/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectContactsLoading = state => state.contacts.contacts.isLoading;\nexport const selectContactsError = state => state.contacts.contacts.error;\nexport const selectContactsFilter = state => state.contacts.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectContactsFilter],\n  (contacts, contactsFilter) => {\n    const normalizedFilter = contactsFilter.trim().toLowerCase();\n    return contactsFilter\n      ? contacts.filter(contact =>\n          contact.name.toLowerCase().includes(normalizedFilter)\n        )\n      : contacts;\n  }\n);\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  ContactsItem,\n  ContactsInfo,\n  ContactButton,\n  InfoContainer,\n  ContactList,\n  ContactsSubTitle,\n} from 'components/ui';\nimport {\n  deleteContact,\n  fetchContacts,\n} from 'components/redux/contacts/contactsOperations';\nimport {\n  selectContactsError,\n  selectContactsLoading,\n  selectVisibleContacts,\n} from 'components/redux/contacts/contactsSelectors';\nimport { useEffect } from 'react';\n\nconst PhoneBook = () => {\n  const token = useSelector(state => state.auth.token);\n  const dispatch = useDispatch();\n\n  const getVisibleContacts = useSelector(selectVisibleContacts);\n  const getLoading = useSelector(selectContactsLoading);\n  const getError = useSelector(selectContactsError);\n\n  useEffect(() => {\n    if (token) {\n      setTimeout(() => {\n        dispatch(fetchContacts());\n      }, 400);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token]);\n\n  return (\n    <>\n      <ContactsSubTitle>Contacts</ContactsSubTitle>\n      {getLoading && <p>Casting spell...</p>}\n      {!getError ? (\n        <ContactList>\n          {getVisibleContacts.map(({ id, name, number }) => {\n            return (\n              <ContactsItem key={id}>\n                <InfoContainer>\n                  <ContactsInfo>{name}</ContactsInfo>\n                  <ContactsInfo>{number}</ContactsInfo>\n                </InfoContainer>\n                <ContactButton\n                  delete\n                  type=\"button\"\n                  disabled={getLoading}\n                  onClick={() => {\n                    dispatch(deleteContact(id));\n                  }}\n                >\n                  Delete\n                </ContactButton>\n              </ContactsItem>\n            );\n          })}\n        </ContactList>\n      ) : (\n        <p>Alchemical laboratory is currently closed... Try again later...</p>\n      )}\n    </>\n  );\n};\n\nexport default PhoneBook;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'components/redux/contacts/contactsOperations';\nimport {\n  ContactForm,\n  ContactButton,\n  AuthInput,\n  AuthLabel,\n} from 'components/ui';\nimport { selectContacts } from 'components/redux/contacts/contactsSelectors';\n\nconst HandleForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onInput = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        alert('Something went wrong...');\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const submitForm = event => {\n    event.preventDefault();\n\n    const normalizedFilter = name.toLowerCase();\n\n    const isPresent = contacts.some(contact => {\n      return contact.name.toLowerCase() === normalizedFilter;\n    });\n\n    if (isPresent) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n\n    dispatch(addContact({ name, number, resetForm }));\n  };\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={submitForm}>\n        <AuthLabel htmlFor=\"inputNameField\">Name of your bestie:</AuthLabel>\n        <AuthInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          onChange={onInput}\n          id=\"inputNameField\"\n          required\n        />\n\n        <AuthLabel htmlFor=\"inputNumberField\">\n          Friend's telepathy number:\n        </AuthLabel>\n        <AuthInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={number}\n          onChange={onInput}\n          id=\"inputNumberField\"\n          required\n        />\n\n        <ContactButton type=\"submit\">Add contact</ContactButton>\n      </ContactForm>\n    </>\n  );\n};\n\nexport default HandleForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'components/redux/contacts/contactsSlice';\nimport { ContactFilter } from 'components/ui';\nimport { selectContactsFilter } from 'components/redux/contacts/contactsSelectors';\nimport { AuthLabel, AuthInput } from 'components/ui';\n\nconst FilterContacts = () => {\n  const filter = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <ContactFilter>\n        <AuthLabel htmlFor=\"search\">Whom do we need to find today?</AuthLabel>\n        <AuthInput\n          id=\"search\"\n          type=\"text\"\n          value={filter}\n          onChange={event => dispatch(filterContacts(event.target.value))}\n          placeholder=\"What is the name of my friend...\"\n        />\n      </ContactFilter>\n    </>\n  );\n};\n\nexport default FilterContacts;\n","import PhoneBook from 'components/contactList/PhoneBook';\nimport HandleForm from 'components/handleForm';\nimport FilterContacts from 'components/filterContacts';\nimport {\n  ContactsContainer,\n  ContactsSubContainer,\n  ContactsBackgroundContainer,\n} from 'components/ui';\n\nconst Contacts = () => {\n  return (\n    <ContactsContainer>\n      <ContactsSubContainer>\n        <HandleForm />\n        <ContactsBackgroundContainer />\n      </ContactsSubContainer>\n      <ContactsSubContainer>\n        <FilterContacts />\n      </ContactsSubContainer>\n      <ContactsSubContainer>\n        <PhoneBook />\n      </ContactsSubContainer>\n    </ContactsContainer>\n  );\n};\n\nexport default Contacts;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectContactsLoading","isLoading","selectContactsError","error","selectContactsFilter","filter","selectVisibleContacts","contactsFilter","normalizedFilter","trim","toLowerCase","contact","includes","token","useSelector","auth","dispatch","useDispatch","getVisibleContacts","getLoading","getError","useEffect","setTimeout","fetchContacts","id","number","delete","type","disabled","onClick","deleteContact","useState","setName","setNumber","onInput","event","target","alert","resetForm","onSubmit","preventDefault","some","addContact","htmlFor","pattern","title","onChange","required","filterContacts","placeholder"],"sourceRoot":""}